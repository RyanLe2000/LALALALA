"""
    Complete all of the TODO directions
    The number next to the TODO represents the chapter
    and section that explain the required code
    Your file should compile error free
    Submit your completed file
"""

# TODO 11.1 Introduction to Inheritance
# You are going to create a Dwelling class based on the Automobile
# Sample from the chapter

import Automobile
# create the class Dwelling, the __init__ method should accept number_of_rooms, square_feet, floors
class dwelling:
    def __int__(self, rooms, feet, floors):

          self.__rooms = rooms
          self.__feet = feet
          self.__floors = floors


# add the mutators for all of the data attributes (number_of_rooms, square_feet, floors)
    def set_rooms(self, rooms):
          self.__rooms = rooms

    def set_feet(self, feet):
          self.__feet = feet

    def set_floors(self, floors):
          self.__floors = floors


# add the accessors for all of  the data attributes

    def get_rooms(self):
          return self.__rooms

    def get_feet(self):
          return self.__feet

    def get_floors(self):
          return self.__floors

# Create the class Single_family_home as a sub class of Dwelling
# The __init__ method should accept number_of_rooms, square_feet, floors, garage_type, yard_size
class single_family_home(dwelling):
    def __int__(self, rooms, feet, floors, garage_type, yard_size):
# call the superclass of Dwelling and pass the required arguments, remember to include self
    dwelling __int__(self, rooms, feet, floors, garage_type, yard_size)
# initialize the garage_type and yard_size attributes
    def set_garage_type(self, garage_type):
        self.__garage_type = garage_type
    def set_yard_size(self, yard_size):
        self.__yard_size = yard_size
# create the mutator and accessor methods for the garage_type and yard_size attributes
    def get_garage_type(self):
        return self.__garage_type
    def get_yard_size(self):
        return self.__yard_size

# demonstrate the Single_family_home class, no need to import because you are in the same file

# create an object from the Single_family_home class with the following information:
# 6 rooms, 1200 square feet, 1 floor, single car garage, .25 acres
# Display the data using the accessor methods
    used_home = oldhome.singe_family_home(3, "32ft", 2, 'mach 10', "50ft")
    print('rooms:', used_home.get_rooms())
    print('feet:', used_home.get_feet())
    print('floors:', used_home.get_floors())
    print('garage_type:', used_home.get_garage_type())
    print('yard_size:', used_home.get_yard_size())

# create the main function
def main():
# call the main function
main()

# TODO 11.2 Polymorphism
# Type in the mammal class from program 11-9    lines 1 - 22

class mammal:

# create a Mouse class as a sub class of the mammal class following the Dog example
class mouse(mammal):
    def __int__(self, whom):
        self.__whom = whom
    def set_whom(self, whom):
        self.__whom = whom
    def get_whom(self):
        return self.__whom
    rat = rat.mouse("Its a mammal for a mouse")
    print('whom:', rat.whom())

# create a Bird class as a sub class of the mammal class following the Cat Example
class bird(mammal):
    def __int__(self, whom):
        self.__whom = whom
    def set_whom(self, whom):
        self.__whom = whom
    def get_whom(self):
        return self.__whom
    berd = berb.bird("Its a mammal for a mouse")
    print('whom:', bird.whom())

# Follow the example in program 11-10 (no need to import, use main2 instead of main
# because there is already a main on this page) use the Mouse and Bird class that you created


